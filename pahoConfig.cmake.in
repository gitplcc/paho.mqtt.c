#######################################################################
# Config file for the @CMAKE_PROJECT_NAME@ package.
#
# This variables shoud be defined before find_package:
#
#  @CMAKE_PROJECT_NAME@_USE_SSL        - use SSL enabled libraries (default: OFF)
#  @CMAKE_PROJECT_NAME@_USE_STATIC     - use statically linked libraries (default: OFF)
#
# It defines the following variables
#
#  @CMAKE_PROJECT_NAME@_CLIENT_LIBRARY - @CMAKE_PROJECT_NAME@ client library
#  @CMAKE_PROJECT_NAME@_ASYNC_LIBRARY  - @CMAKE_PROJECT_NAME@ asynchronous client library
#  @CMAKE_PROJECT_NAME@_INCLUDE_DIRS   - include directories for @CMAKE_PROJECT_NAME@
#  @CMAKE_PROJECT_NAME@_LIBRARIES      - libraries for @CMAKE_PROJECT_NAME@
#  @CMAKE_PROJECT_NAME@_MQTTVERSION    - MQTTVersion executable
#
# Usage:
#
# CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
#
# PROJECT(pahotest C)
#
# SET(PAHOTEST_VERSION_MAJOR 0)
# SET(PAHOTEST_VERSION_MINOR 0)
# SET(PAHOTEST_VERSION_MICRO 1)
# SET(PAHOTEST_VERSION "${PAHOTEST_VERSION_MAJOR}.${PAHOTEST_VERSION_MINOR}.${PAHOTEST_VERSION_MICRO}")
#
# SET(paho_USE_SSL ON)
# SET(paho_USE_STATIC OFF)
# FIND_PACKAGE(paho 1.0 REQUIRED)
#
# INCLUDE_DIRECTORIES (
#   ${paho_INCLUDE_DIRS}
# )
#
# LINK_DIRECTORIES(
#   ${paho_LIBRARY_DIRS}
# )
#
# ADD_EXECUTABLE (
#   pahotest
#   pahotest
# )
#
# TARGET_LINK_LIBRARIES (
#   pahotest
#   ${paho_LIBRARIES}
# )
#
#######################################################################

SET(@CMAKE_PROJECT_NAME@_VERSION @CLIENT_VERSION@)

@PACKAGE_INIT@

SET_AND_CHECK(@CMAKE_PROJECT_NAME@_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
SET_AND_CHECK(@CMAKE_PROJECT_NAME@_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
SET_AND_CHECK(@CMAKE_PROJECT_NAME@_INSTALL_CMAKE_DIR "@PACKAGE_INSTALL_CMAKE_DIR@")

CHECK_REQUIRED_COMPONENTS(@CMAKE_PROJECT_NAME@)

# Our library dependencies (contains definitions for IMPORTED targets)
# These are IMPORTED targets created by @CMAKE_PROJECT_NAME@Targets.cmake
IF(NOT TARGET paho-mqtt3c
  AND NOT TARGET paho-mqtt3c
  AND NOT TARGET paho-mqtt3a
  AND NOT TARGET paho-mqtt3cs
  AND NOT TARGET paho-mqtt3as
  AND NOT TARGET paho-mqtt3c-static
  AND NOT TARGET paho-mqtt3a-static
  AND NOT TARGET paho-mqtt3cs-static
  AND NOT TARGET paho-mqtt3as-static
  AND NOT PROJECT_BINARY_DIR
)
  INCLUDE("${@CMAKE_PROJECT_NAME@_INSTALL_CMAKE_DIR}/@CMAKE_PROJECT_NAME@Targets.cmake")
ENDIF()

SET(_@CMAKE_PROJECT_NAME@_WITH_SSL @PAHO_WITH_SSL@)
SET(_@CMAKE_PROJECT_NAME@_BUILD_STATIC @PAHO_BUILD_STATIC@)
SET(_@CMAKE_PROJECT_NAME@_ADDITIONAL_LIBRARIES "")

IF(NOT DEFINED @CMAKE_PROJECT_NAME@_USE_SSL)
  SET(@CMAKE_PROJECT_NAME@_USE_SSL OFF)
ENDIF()
IF(NOT DEFINED @CMAKE_PROJECT_NAME@_USE_STATIC)
  SET(@CMAKE_PROJECT_NAME@_USE_STATIC OFF)
ENDIF()

IF((@CMAKE_PROJECT_NAME@_USE_SSL AND NOT _@CMAKE_PROJECT_NAME@_WITH_SSL)
  OR
  (@CMAKE_PROJECT_NAME@_USE_STATIC AND NOT _@CMAKE_PROJECT_NAME@_BUILD_STATIC))
  SET(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY @CMAKE_PROJECT_NAME@_CLIENT_LIBRARY-NOTFOUND)
  SET(@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY @CMAKE_PROJECT_NAME@_ASYNC_LIBRARY-NOTFOUND)
  SET(@CMAKE_PROJECT_NAME@_LIBRARIES @CMAKE_PROJECT_NAME@_LIBRARIES-NOTFOUND)
ELSE()
  IF(@CMAKE_PROJECT_NAME@_USE_SSL)
    IF(@CMAKE_PROJECT_NAME@_USE_STATIC)
      SET(OPENSSL_USE_STATIC_LIBS ON)
      FIND_PACKAGE(OpenSSL REQUIRED)
      SET(_@CMAKE_PROJECT_NAME@_ADDITIONAL_LIBRARIES ${OPENSSL_LIBRARIES})
      SET(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY paho-mqtt3cs-static)
      SET(@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY paho-mqtt3as-static)
    ELSE()
      SET(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY paho-mqtt3cs)
      SET(@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY paho-mqtt3as)
    ENDIF()
  ELSE()
    IF(@CMAKE_PROJECT_NAME@_USE_STATIC)
      SET(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY paho-mqtt3c-static)
      SET(@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY paho-mqtt3a-static)
    ELSE()
      SET(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY paho-mqtt3c)
      SET(@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY paho-mqtt3a)
    ENDIF()
  ENDIF()
  SET(@CMAKE_PROJECT_NAME@_LIBRARIES
    ${@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY}
    ${@CMAKE_PROJECT_NAME@_ASYNC_LIBRARY}
    ${_@CMAKE_PROJECT_NAME@_ADDITIONAL_LIBRARIES}
  )
ENDIF()

SET(@CMAKE_PROJECT_NAME@_MQTTVERSION MQTTVersion)

IF(@CMAKE_PROJECT_NAME@_CLIENT_LIBRARY
  AND @CMAKE_PROJECT_NAME@_ASYNC_LIBRARY
  AND @CMAKE_PROJECT_NAME@_INCLUDE_DIRS
  AND @CMAKE_PROJECT_NAME@_LIBRARIES
  AND @CMAKE_PROJECT_NAME@_MQTTVERSION
)
  SET(@CMAKE_PROJECT_NAME@_FOUND TRUE)
ELSE()
  SET(@CMAKE_PROJECT_NAME@_FOUND @CMAKE_PROJECT_NAME@_FOUND-NOTFOUND)
ENDIF()
